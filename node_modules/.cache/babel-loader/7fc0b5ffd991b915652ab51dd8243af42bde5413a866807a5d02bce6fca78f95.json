{"ast":null,"code":"import _objectSpread from \"C:/Users/oreor/Desktop/website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nfunction createUseRender() {\n  var forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var useRender = function useRender(Component, props, projectionId, ref, _ref, isStatic) {\n    var latestValues = _ref.latestValues;\n    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    var elementProps = _objectSpread(_objectSpread(_objectSpread({}, filteredProps), visualProps), {}, {\n      ref: ref\n    });\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    var children = props.children;\n    var renderedChildren = useMemo(function () {\n      return isMotionValue(children) ? children.get() : children;\n    }, [children]);\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n    return createElement(Component, _objectSpread(_objectSpread({}, elementProps), {}, {\n      children: renderedChildren\n    }));\n  };\n  return useRender;\n}\nexport { createUseRender };","map":{"version":3,"names":["useMemo","createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","isMotionValue","createUseRender","forwardMotionProps","useRender","Component","props","projectionId","ref","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps","children","renderedChildren","get"],"sources":["C:/Users/oreor/Desktop/website/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"sourcesContent":["import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,aAAa,QAAQ,OAAO;AAC9C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,aAAa,QAAQ,uCAAuC;AAErE,SAASC,eAAe,GAA6B;EAAA,IAA5BC,kBAAkB,uEAAG,KAAK;EAC/C,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,GAAG,QAAoBC,QAAQ,EAAK;IAAA,IAA7BC,YAAY,QAAZA,YAAY;IAClE,IAAMC,cAAc,GAAGZ,cAAc,CAACM,SAAS,CAAC,GAC1CL,WAAW,GACXH,YAAY;IAClB,IAAMe,WAAW,GAAGD,cAAc,CAACL,KAAK,EAAEI,YAAY,EAAED,QAAQ,EAAEJ,SAAS,CAAC;IAC5E,IAAMQ,aAAa,GAAGf,WAAW,CAACQ,KAAK,EAAE,OAAOD,SAAS,KAAK,QAAQ,EAAEF,kBAAkB,CAAC;IAC3F,IAAMW,YAAY,iDACXD,aAAa,GACbD,WAAW;MACdJ,GAAG,EAAHA;IAAG,EACN;IACD;AACR;AACA;AACA;AACA;IACQ,IAAQO,QAAQ,GAAKT,KAAK,CAAlBS,QAAQ;IAChB,IAAMC,gBAAgB,GAAGrB,OAAO,CAAC;MAAA,OAAOM,aAAa,CAACc,QAAQ,CAAC,GAAGA,QAAQ,CAACE,GAAG,EAAE,GAAGF,QAAQ;IAAA,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;IACzG,IAAIR,YAAY,EAAE;MACdO,YAAY,CAAC,oBAAoB,CAAC,GAAGP,YAAY;IACrD;IACA,OAAOX,aAAa,CAACS,SAAS,kCACvBS,YAAY;MACfC,QAAQ,EAAEC;IAAgB,GAC5B;EACN,CAAC;EACD,OAAOZ,SAAS;AACpB;AAEA,SAASF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}