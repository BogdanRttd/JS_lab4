{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\", \"strictMode\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport deepDiffer from '../deepDiffer';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nimport VirtualizedList from '../VirtualizedList';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport memoizeOne from 'memoize-one';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\nfunction isArrayLike(data) {\n  // $FlowExpectedError[incompatible-use]\n  return typeof Object(data).length === 'number';\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (numColumns > 1) {\n        var ret = [];\n        for (var kk = 0; kk < numColumns; kk++) {\n          var itemIndex = index * numColumns + kk;\n          if (itemIndex < data.length) {\n            var _item = data[itemIndex];\n            ret.push(_item);\n          }\n        }\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n    this._getItemCount = data => {\n      // Legacy behavior of FlatList was to forward \"undefined\" length if invalid\n      // data like a non-arraylike object is passed. VirtualizedList would then\n      // coerce this, and the math would work out to no-op. For compatibility, if\n      // invalid data is passed, we tell VirtualizedList there are zero items\n      // available to prevent it from trying to read from the invalid data\n      // (without propagating invalidly typed data).\n      if (data != null && isArrayLike(data)) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n      }\n\n      // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n      return keyExtractor(items, index);\n    };\n    this._renderer = (ListItemComponent, renderItem, columnWrapperStyle, numColumns, extraData\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var cols = numColumnsOrDefault(numColumns);\n      var render = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n      var renderProp = info => {\n        if (cols > 1) {\n          var _item2 = info.item,\n            _index = info.index;\n          invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n          return /*#__PURE__*/React.createElement(View, {\n            style: StyleSheet.compose(styles.row, columnWrapperStyle)\n          }, _item2.map((it, kk) => {\n            var element = render({\n              // $FlowFixMe[incompatible-call]\n              item: it,\n              index: _index * cols + kk,\n              separators: info.separators\n            });\n            return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n              key: kk\n            }, element) : null;\n          }));\n        } else {\n          return render(info);\n        }\n      };\n      return ListItemComponent ? {\n        ListItemComponent: renderProp\n      } : {\n        renderItem: renderProp\n      };\n    };\n    this._memoizedRenderer = memoizeOne(this._renderer);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n    this._checkProps(this.props);\n  }\n  // $FlowFixMe[missing-local-annot]\n  _checkProps(props) {\n    var getItem = props.getItem,\n      getItemCount = props.getItemCount,\n      horizontal = props.horizontal,\n      columnWrapperStyle = props.columnWrapperStyle,\n      onViewableItemsChanged = props.onViewableItemsChanged,\n      viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n  _createOnViewableItemsChanged(onViewableItemsChanged\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n  render() {\n    var _this$props = this.props,\n      numColumns = _this$props.numColumns,\n      columnWrapperStyle = _this$props.columnWrapperStyle,\n      _removeClippedSubviews = _this$props.removeClippedSubviews,\n      _this$props$strictMod = _this$props.strictMode,\n      strictMode = _this$props$strictMod === void 0 ? false : _this$props$strictMod,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    var renderer = strictMode ? this._memoizedRenderer : this._renderer;\n    return /*#__PURE__*/(\n      // $FlowFixMe[incompatible-exact] - `restProps` (`Props`) is inexact.\n      React.createElement(VirtualizedList, _extends({}, restProps, {\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n        removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n      }, renderer(this.props.ListItemComponent, this.props.renderItem, columnWrapperStyle, numColumns, this.props.extraData)))\n    );\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_objectSpread","_excluded","View","StyleSheet","deepDiffer","Platform","invariant","React","VirtualizedList","keyExtractor","defaultKeyExtractor","memoizeOne","removeClippedSubviewsOrDefault","removeClippedSubviews","OS","numColumnsOrDefault","numColumns","isArrayLike","data","Object","length","FlatList","PureComponent","scrollToEnd","params","_listRef","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getNativeScrollRef","getScrollRef","getScrollableNode","constructor","_props","_virtualizedListPairs","_captureRef","ref","_getItem","index","props","ret","kk","itemIndex","_item","push","_getItemCount","Math","ceil","_keyExtractor","items","_this$props$keyExtrac","Array","isArray","map","item","join","_renderer","ListItemComponent","renderItem","columnWrapperStyle","extraData","cols","render","createElement","renderProp","info","_item2","_index","style","compose","styles","row","it","element","separators","Fragment","key","_memoizedRenderer","_checkProps","viewabilityConfigCallbackPairs","pair","viewabilityConfig","onViewableItemsChanged","_createOnViewableItemsChanged","componentDidUpdate","prevProps","getItem","getItemCount","horizontal","_pushMultiColumnViewable","arr","v","_this$props$keyExtrac2","forEach","ii","changed","viewableItems","_this$props","_removeClippedSubviews","_this$props$strictMod","strictMode","restProps","renderer","create","flexDirection"],"sources":["C:/Users/oreor/Documents/GitHub/JS_lab4/node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\", \"strictMode\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport deepDiffer from '../deepDiffer';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nimport VirtualizedList from '../VirtualizedList';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport memoizeOne from 'memoize-one';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\nfunction isArrayLike(data) {\n  // $FlowExpectedError[incompatible-use]\n  return typeof Object(data).length === 'number';\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (numColumns > 1) {\n        var ret = [];\n        for (var kk = 0; kk < numColumns; kk++) {\n          var itemIndex = index * numColumns + kk;\n          if (itemIndex < data.length) {\n            var _item = data[itemIndex];\n            ret.push(_item);\n          }\n        }\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n    this._getItemCount = data => {\n      // Legacy behavior of FlatList was to forward \"undefined\" length if invalid\n      // data like a non-arraylike object is passed. VirtualizedList would then\n      // coerce this, and the math would work out to no-op. For compatibility, if\n      // invalid data is passed, we tell VirtualizedList there are zero items\n      // available to prevent it from trying to read from the invalid data\n      // (without propagating invalidly typed data).\n      if (data != null && isArrayLike(data)) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n      }\n\n      // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n      return keyExtractor(items, index);\n    };\n    this._renderer = (ListItemComponent, renderItem, columnWrapperStyle, numColumns, extraData\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var cols = numColumnsOrDefault(numColumns);\n      var render = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n      var renderProp = info => {\n        if (cols > 1) {\n          var _item2 = info.item,\n            _index = info.index;\n          invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n          return /*#__PURE__*/React.createElement(View, {\n            style: StyleSheet.compose(styles.row, columnWrapperStyle)\n          }, _item2.map((it, kk) => {\n            var element = render({\n              // $FlowFixMe[incompatible-call]\n              item: it,\n              index: _index * cols + kk,\n              separators: info.separators\n            });\n            return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n              key: kk\n            }, element) : null;\n          }));\n        } else {\n          return render(info);\n        }\n      };\n      return ListItemComponent ? {\n        ListItemComponent: renderProp\n      } : {\n        renderItem: renderProp\n      };\n    };\n    this._memoizedRenderer = memoizeOne(this._renderer);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n    this._checkProps(this.props);\n  }\n  // $FlowFixMe[missing-local-annot]\n  _checkProps(props) {\n    var getItem = props.getItem,\n      getItemCount = props.getItemCount,\n      horizontal = props.horizontal,\n      columnWrapperStyle = props.columnWrapperStyle,\n      onViewableItemsChanged = props.onViewableItemsChanged,\n      viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n  _createOnViewableItemsChanged(onViewableItemsChanged\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n  render() {\n    var _this$props = this.props,\n      numColumns = _this$props.numColumns,\n      columnWrapperStyle = _this$props.columnWrapperStyle,\n      _removeClippedSubviews = _this$props.removeClippedSubviews,\n      _this$props$strictMod = _this$props.strictMode,\n      strictMode = _this$props$strictMod === void 0 ? false : _this$props$strictMod,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    var renderer = strictMode ? this._memoizedRenderer : this._renderer;\n    return (\n      /*#__PURE__*/\n      // $FlowFixMe[incompatible-exact] - `restProps` (`Props`) is inexact.\n      React.createElement(VirtualizedList, _extends({}, restProps, {\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n        removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n      }, renderer(this.props.ListItemComponent, this.props.renderItem, columnWrapperStyle, numColumns, this.props.extraData)))\n    );\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}